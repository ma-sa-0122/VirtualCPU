; 何文字目か を GR1 で保持する
loop    START
        ; 入力した文字でくり返し
        LD       GR0, STR, GR1  ; 一文字受け取って GR0 へ
        LAD      GR1, 1, GR1    ; ADDA GR1, =1 と同じ。メモリを削減できる
        CPL      GR0, =#0080    ; asciiコードの範囲外か
        JPL      FIN            ; 範囲外なら文字じゃないのでループ終わり

        ; 文字が演算子か？
        CPA      GR0, ='+'      ; 文字 '+' と比較
        JZE      PLUS           ; 対応する計算 PLUS に飛ぶ
        CPA      GR0, ='-'
        JZE      MINUS
        CPA      GR0, ='*'
        JZE      MUL
        CPA      GR0, ='/'
        JZE      DIV

        ; 演算子じゃないなら数字なので保持
        SUBA     GR0, =#0030    ; 数字を 数値 に変換
        LD       GR2, GR0       ; GR2 に数値を保存
        JUMP     loop

; 対応する計算
; + のとき
PLUS    LD       GR0, STR, GR1
        LAD      GR1, 1, GR1
        SUBA     GR0, =#0030
        LD       GR3, GR0       ; 足す数を GR3 に保持
        ADDA     GR2, GR3       ; 実際に足し算を行う
        JUMP     loop           ; まだ後ろに式が続いてるかもしれないのでジャンプ
; - のとき
MINUS   LD       GR0, STR, GR1
        LAD      GR1, 1, GR1
        SUBA     GR0, =#0030
        LD       GR3, GR0
        SUBA     GR2, GR3       ; 実際に引き算を行う
        JUMP     loop
; * のとき
MUL     LD       GR0, STR, GR1
        LAD      GR1, 1, GR1
        SUBA     GR0, =#0030
        LD       GR3, GR0
        NOP                     ; 実際に掛け算を行う。今は NOP で仮実装
        JUMP     loop
; / のとき
DIV     LD       GR0, STR, GR1
        LAD      GR1, 1, GR1
        SUBA     GR0, =#0030
        LD       GR3, GR0
        NOP                     ; 実際に割り算を行う。今は NOP で仮実装
        JUMP     loop

FIN     RET

STR     DC      '3-5+7-4'
        END