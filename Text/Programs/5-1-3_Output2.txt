MAIN    START
        LAD     GR2, 173

NUMTOS  LAD     GR3, 0          ; 使うレジスタたちの初期化
        LAD     GR4, 0
        LAD     GR5, 0
        LAD     GR6, 0
        CPL     GR2, =0         ; 値が 0 じゃなければ、DIV10 に飛ぶ
        JNZ     DIV10
        PUSH    0               ; 値が 0 なら、0 を積んで 桁数を1にして SETANS へ
        LAD     GR6, 1
        ST      GR6, anslen
        JUMP    SETANS
DIV10   CPL     GR2, =0         ; 値が 0 になるまでループ
        JZE     SETANS
        ; GR2 / 10 をして、商を GR3 に
        CPL     GR2, =10        ; 割られる数・差分が 10 より小さくなったら
        JMI     STACK           ; 割り算終了。STACK に飛ぶ
        LAD     GR4, 1          ; GR4 の初期化（予め商を 1 としておく）
        LAD     GR5, 10         ; 割る数の設定
D10_SFT CPA     GR2, GR5        ; 割られる数・差分 と 最大値 を比較
        JMI     D10_PLS         ; 差分 < 最大値 なら D_PLS に飛ぶ
        SLA     GR4, 1          ; 商を左シフト
        SLA     GR5, 1          ; 最大値を左シフト
        JUMP    D10_SFT
D10_PLS SRA     GR4, 1          ; GR4, GR5 は 割られる数・差分を超えるまで増やしてるので、
        SRA     GR5, 1          ; 1回分 戻す。右シフト
        SUBA    GR2, GR5        ; GR2 - 最大値。一回割った差分が GR2 に再格納される
        ADDA    GR3, GR4        ; 商を GR3 に足す
        JUMP    DIV10           ; DIN10 に戻って繰り返し
        ; GR2 / 10 が終わったら、余りは GR2 に入っている
STACK   PUSH    0, GR2          ; インデックス修飾で GR2 の値を PUSH
        LD      GR2, GR3        ; 商を GR2 に移動
        LAD     GR3, 0          ; GR3 を初期化
        LAD     GR6, 1, GR6     ; 桁数を GR6 に保持
        ST      GR6, anslen     ; 桁数を anslen にも格納
        JUMP    DIV10

; スタックから取り出して数字列を作る。今何桁目 を GR3 に入れるとする
SETANS  CPL     GR6, GR3        ; 全桁終わるまで繰り返し
        JZE     OUTPUT
        POP     GR2
        ADDA    GR2, =#0030     ; 数値 を 数字 に変換
        ST      GR2, ans, GR3   ; インデックス修飾で「何桁目」を指定する
        LAD     GR3, 1, GR3     ; 今読んだ桁数を増やす
        JUMP    SETANS

; 答えの出力
OUTPUT  OUT     ans, anslen
        
        RET
anslen  DS      1       ; 答えの桁数
ans     DS      5       ; 値は 0 ~ 65535 の最大5桁
        END